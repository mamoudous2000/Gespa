<?php

    # PHP Security Scanner
    # This program is distributed under the terms and conditions of the GPL
    # See the README and LICENSE files for details

    # This file contains the essential files that you MUST
    # configure to your specific settings.


###########################################################################
# CONFIGURATION VARIABLES
###########################################################################

error_reporting(E_ALL);
define("THIRD_PARTY_LIB",realpath(dirname(__FILE__). "/../3rdPartyLib"));
set_include_path("." . PATH_SEPARATOR . THIRD_PARTY_LIB);


//See INSTALL file for help on this item..
//5.1.1 DB connection settings.
$hostname      = "localhost";
$db_username   = "root";
$db_password   = "";
$database_name = "DB_you_created";

///READ THE FOLLOWING SECTION CAREFULLY...

//By default: Scanning .php files only, doing no filtering on files/directories to be scanned.

//5.1.2 PHP_EXTENSION
/**
* These are the files that will be scanned. Make sure these files are php source because otherwise results could
* be funny. For example if you want to scan .php files you place php in the array (as default).
* If uncomment all others then will scan all .php .html .php4 .php5 and .phps files.
* Of course you could add any extension you like but this is PHP security scanner after all.
*/
$GLOBALS['php_extensions'] = array (
                            'php',
                            //'html',
                            //'php4',
                            //'php5',
                            //'phps',
                            );

///  <<<IMPORTANT>>>
///ONLY FILES LISTED WITH PHP_EXTENSION WILL BE SCANNED!!!

//5.1.3 Black/white list filters.
/**
*   Case sensitive.
*   White and black lists consider which files will be scanned. This feature is very basic so far.
*   It allows you to use exact naming -> useful if you want to skip scanning template dirs for example.
*   Allows you to set how a directory/file name should start or how should end.
*
*   IMPORTANT: Matches are FIFO. So if any match is met it is considered a match. You cannot make a logical
*   AND to match several cases. Something I intend to add in the future ;)
*   The directory/file you actually point for scanning(using the binary script) will always be scanned no matter this section.
*   Files and directory names are checked in the following order: exact, start_with, end_on   -> as soon as a match is found the file/directory name is considered a match.
*
*   -------------------------------------------------
*   |Matches                |White list | Black list|
*   -------------------------------------------------
*   | Any white/but black   |   on     |   off      |
*   -------------------------------------------------
*   | All/ but black        |   off    |   on       |
*   -------------------------------------------------
*   | Only white (any of it)|   on     |   off      |
*   -------------------------------------------------
*   | All                   |   off    |   off      |
*   -------------------------------------------------
*
*   Legend:
*    on       >>> skip_list == false
*    off      >>> skip_list == true
*
*
*   Tip:
*   Comment matches you don't want to consider.
*   To add new match just copy/paste a row from the array.
*   Use skip_list whenever you want not to consider matches.
*
*   IMPORTANT: You should either have some values in exact,start_with, end_on or you should put scrip_list to
*   true.
*   Use block comments to do this faster. Just remove/add the first '/' slash from the comment block in
*   skip_list and true will change to false and vice versa.
*/

$GLOBALS['match_list'] = array (

    ///configuration for matching files
    'file' => array (//for matching files
            'white_list' => array(//white list

                        'skip_list' => //*
                                        true, ///FILE WHITE LIST SWITCHED OFF
                                        /*/
                                        false, /// FILE WHITE LIST SWITCHED ON  !!!switch off instead of uncomment everything
                                        // */
                        'exact' => array ( //exact name. but the extension should be one of PHP_EXTENION configured(e.g. file.php).
                                    //'smth.php',
                                    //'smth.html',
                                    //'smth.php3',
                                    ),
                        'start_with' => array ( //name starts with. (e.g. "TEST" will match TESTanything.PHP_EXTENION)
                                    'no',
                                    //'test3',
                                    ),
                        'end_on' => array ( //name ends on(e.g. "TEST" will match anythingTEST.PHP_EXTENSION)
                                    //'something',
                                    'ty',
                                    ),
                        ),
            'black_list' => array(// black list

                        'skip_list' => //*
                                        true, ///FILE BLACK LIST SWITCHED OFF
                                        /*/
                                        false, /// FILE BLACK LIST SWITCHED ON !!!switch off instead of uncomment everything
                                        // */
                        'exact' => array ( //exact name. but the extension should be one of PHP_EXTENION configured(e.g. file.php).
                                    //'smth.php',
                                    //'smth.html',
                                    ),
                        'start_with' => array ( //name DOES NOT start with. (e.g. "TEST" will match TESTanything.PHP_EXTENION)
                                    //'test',
                                    //'TEST',
                                    ),
                        'end_on' => array ( //name DOES NOT end on(e.g. "TEST" will match anythingTEST.PHP_EXTENSION)
                                    //'er',
                                    //'Er',
                                    ),
                        ),
                ),

              ///NO PHP_EXTENSION IS CONSIDERED IN DIRECTORY LIST

    ///configuration for matching directories
    'dir' => array (//for matching directories
            'white_list' => array(//white list

                        //if set to true, no matching is made on this list. Will consider match anything.
                        'skip_list' => //*
                                        true, ///DIRECTORY WHITE LIST SWITCHED OFF
                                        /*/
                                        false, ///DIRECTORY WHITE LIST SWITCHED ON !!!switch off instead of uncomment everything
                                        // */
                        'exact' => array ( //exact name. NO PHP_EXTENSION is considered here
                                    //'smth',
                                    //'smth',
                                    ),
                        'start_with' => array ( //dir name starts with (e.g. "TEST" will match TESTanything)
                                    //'smth',
                                    //'smth',
                                    ),
                        'end_on' => array ( //dir name ends on(e.g. "TEST" will match anythingTEST)
                                    //'smth',
                                    //'smth',
                                    ),
                        ),
            'black_list' => array(// black list

                        //if set to true, no matching is made on this list. Will consider match anything.
                        'skip_list' => //*
                                        true, ///DIRECTORY BLACK LIST SWITCHED OFF
                                        /*/
                                        false, ///DIRECTORY BLACK LIST SWITCHED ON !!!switch off instead of uncomment everything
                                        // */
                        'exact' => array ( //exact name. NO PHP_EXTENSION is considered here. (e.g. TEST will match TEST)
                                    'somedir',
                                    'somedir',
                                    ),
                        'start_with' => array ( //dir name DOES NOT start with. (e.g. TEST will match TESTanything)
                                    //'smth',
                                    //'smth',
                                    ),
                        'end_on' => array ( //dir name DOES NOT end on. (e.g. TEST will match anythingTEST)
                                    //'smth',
                                    //'smth',
                                    ),
                        ),
              )
      );


    /* DO NOT EDIT BELOW THIS LINE *//* DO NOT EDIT BELOW THIS LINE *//* DO NOT EDIT BELOW THIS LINE */

require_once('DB.php');

//creating database connection
$dsn = array(
    'phptype'  => 'mysql',
    'username' => $db_username,
    'password' => $db_password,
    'hostspec' => $hostname,
    'database' => $database_name,
);

$dbh =& DB::connect($dsn);
if (DB::isError($dbh)) {
    die ($dbh->getDebugInfo()."\n");
}
$dbh->setFetchMode(DB_FETCHMODE_ASSOC);

//table names used.
$problem_table = 'problem';
$result_table = 'result';

//functions
if (!function_exists('getmicrotime')) {
    function getmicrotime(){
        list($usec, $sec) = explode(" ",microtime());
        return ((float)$usec + (float)$sec);
    }
}
?>